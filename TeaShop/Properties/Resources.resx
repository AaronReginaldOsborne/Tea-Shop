<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="address" xml:space="preserve">
    <value>Address:</value>
    <comment>User Information</comment>
  </data>
  <data name="addtocart" xml:space="preserve">
    <value>ADD TO CART</value>
  </data>
  <data name="agoldfish" xml:space="preserve">
    <value>A GOLD FISH</value>
  </data>
  <data name="areyousureyouwanttocancel" xml:space="preserve">
    <value>Are you sure you want to cancel?</value>
  </data>
  <data name="blacktea" xml:space="preserve">
    <value>Black Tea</value>
    <comment>Tea List</comment>
  </data>
  <data name="blackteadesc" xml:space="preserve">
    <value>IT ONLY HURTS WHEN I TEA</value>
  </data>
  <data name="camomiletea" xml:space="preserve">
    <value>Camomile Tea</value>
  </data>
  <data name="camomileteadesc" xml:space="preserve">
    <value>German chamomile Matricaria recutita, or Chamomilla recutita is a hardy, self-seeding annual herb. It has long been cultivated in Germany to maximize its medicinal properties.</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="cardtype" xml:space="preserve">
    <value>Card Type</value>
  </data>
  <data name="changeqty" xml:space="preserve">
    <value>Change Quantity</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>City:</value>
    <comment>User Information</comment>
  </data>
  <data name="coffteatea" xml:space="preserve">
    <value>Cofftea Tea</value>
  </data>
  <data name="coffteateadesc" xml:space="preserve">
    <value>Espresso is actually a method of brewing that employs hot water “pressed” through finely ground coffee</value>
  </data>
  <data name="creditcardnumber" xml:space="preserve">
    <value>Credit Card Number</value>
  </data>
  <data name="dateofbirth" xml:space="preserve">
    <value>Date Of Birth:</value>
    <comment>User Information</comment>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
    <comment>Product Information</comment>
  </data>
  <data name="earlgraytea" xml:space="preserve">
    <value>Earlgray Tea</value>
  </data>
  <data name="earlgrayteadesc" xml:space="preserve">
    <value>This quintessentially British tea is typically a black tea base flavored with oil from the rind of bergamot orange, a citrus fruit with the appearance and flavor somewhere between an orange and a lemon with a little grapefruit and lime thrown in.</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>E-mail:</value>
    <comment>User Information</comment>
  </data>
  <data name="firstname" xml:space="preserve">
    <value>First Name:</value>
    <comment>User Information</comment>
  </data>
  <data name="grandtotal" xml:space="preserve">
    <value>Total:</value>
    <comment>Product Information</comment>
  </data>
  <data name="greentea" xml:space="preserve">
    <value>Green Tea</value>
  </data>
  <data name="greenteadesc" xml:space="preserve">
    <value>Green tea is a type of tea that is made from Camellia sinensis leaves that have not undergone the same withering and oxidation process used to make oolong teas and black teas.</value>
  </data>
  <data name="herbaltea" xml:space="preserve">
    <value>Herbal Tea</value>
  </data>
  <data name="herbalteadesc" xml:space="preserve">
    <value>fruit teas are beverages made from the infusion or decoction of herbs.</value>
  </data>
  <data name="honeylemontea" xml:space="preserve">
    <value>Honey Lemon Tea</value>
  </data>
  <data name="honeylemonteadesc" xml:space="preserve">
    <value>Put honey and lemon juice into a tea cup or mug. Add hot water and stir. Add more lemon juice, honey, or hot water to taste.</value>
  </data>
  <data name="lastname" xml:space="preserve">
    <value>Last Name:</value>
    <comment>User Information</comment>
  </data>
  <data name="loadlastteaorder" xml:space="preserve">
    <value>Load Last Tea Order</value>
  </data>
  <data name="loadlastuserdata" xml:space="preserve">
    <value>Load Last User Data</value>
  </data>
  <data name="mailaddress" xml:space="preserve">
    <value>Mail Address</value>
  </data>
  <data name="masalatea" xml:space="preserve">
    <value>Masala Tea</value>
  </data>
  <data name="masalateadesc" xml:space="preserve">
    <value>tea beverage made by brewing black tea with a mixture of aromatic Indian spices and herbs.</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="oolongtea" xml:space="preserve">
    <value>Oolong Tea</value>
  </data>
  <data name="oolongteadesc" xml:space="preserve">
    <value>Oolong tea is a product made from the leaves, buds, and stems of the Camellia sinensis plant.</value>
  </data>
  <data name="phonenumber" xml:space="preserve">
    <value>Phone Number:</value>
    <comment>User Information</comment>
  </data>
  <data name="postalcode" xml:space="preserve">
    <value>Postal Code:</value>
    <comment>User Information</comment>
  </data>
  <data name="price" xml:space="preserve">
    <value>Price</value>
    <comment>Product Information</comment>
  </data>
  <data name="proceedtocheckout" xml:space="preserve">
    <value>PROCEED TO CHECK OUT</value>
  </data>
  <data name="productname" xml:space="preserve">
    <value>Product Name</value>
    <comment>Product Information</comment>
  </data>
  <data name="province" xml:space="preserve">
    <value>Province:</value>
    <comment>User Information</comment>
  </data>
  <data name="purchaseorder" xml:space="preserve">
    <value>Purchase Order</value>
  </data>
  <data name="qty" xml:space="preserve">
    <value>QTY</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity</value>
    <comment>Product Information</comment>
  </data>
  <data name="size" xml:space="preserve">
    <value>Size</value>
    <comment>Product Information</comment>
  </data>
  <data name="subtotal" xml:space="preserve">
    <value>Sub-Total:</value>
    <comment>Product Information</comment>
  </data>
  <data name="tax" xml:space="preserve">
    <value>Tax:</value>
    <comment>Product Information</comment>
  </data>
  <data name="teaorderinformation" xml:space="preserve">
    <value>Tea Order Information</value>
  </data>
  <data name="theteashop" xml:space="preserve">
    <value>The Tea Shop</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
    <comment>Product Information</comment>
  </data>
  <data name="userinformation" xml:space="preserve">
    <value>User Information</value>
  </data>
  <data name="whitetea" xml:space="preserve">
    <value>White Tea</value>
  </data>
  <data name="whiteteadesc" xml:space="preserve">
    <value>White tea may refer to one of several styles of tea which generally feature young or minimally processed leaves of the Camellia sinensis plant.</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>YES</value>
  </data>
</root>